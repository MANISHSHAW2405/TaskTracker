{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","protoTypes","PropTypes","string","func","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e390a6aa.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color ,text,onClick}) => {\r\n\r\n    return (\r\n    \r\n<button \r\nonClick={onClick}\r\n style ={{backgroundColor:color}}\r\n  className ='btn'>\r\n      {text}\r\n      </button>\r\n\r\n    )\r\n}\r\nButton.defaultProps={\r\n    color :'blue'\r\n}\r\nButton.protoTypes ={\r\n    text : PropTypes.string ,\r\n    color: PropTypes.string,\r\n    onClick : PropTypes.func,\r\n}\r\n\r\nexport default  Button\r\n","\r\nimport Button from './Button'\r\n\r\nconst Header = ({title,onAdd,showAdd}) => {\r\n\r\n    return (\r\n<header className ='header'>\r\n    <h1 >\r\n    {title}   \r\n    </h1>\r\n    <Button color ={showAdd ? 'red' : 'green'} text = {showAdd ? 'close':'add'} onClick = {onAdd}/>\r\n         \r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps={\r\n    title: 'default task tracker',\r\n}\r\nexport default Header\r\n//PropTypes here\r\n// Header.prototype={\r\n//     title: PropTypes.string.isRequired,\r\n// }\r\n\r\n//CSS here\r\n// const headingStyle ={\r\n//     color : 'red',backgroundColor:'black',\r\n// }\r\n\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task,onDelete,onToggle}) => {\r\n    return (\r\n        <div className ={`task ${task.reminder? 'reminder':''}`}\r\n         onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3> {task.text}\r\n            <FaTimes style ={{color:'red' \r\n            ,cursor : 'pointer'}}\r\n            onClick={()=>onDelete(task.id)}\r\n            />\r\n            </h3>\r\n            <p> {task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","\r\nimport Task from './Task'\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n    \r\n    return (\r\n        <>\r\n          {tasks.map((task)=>(\r\n              <Task \r\n              key ={task.id}  \r\n              task ={task}\r\n              onDelete={onDelete}\r\n              onToggle={onToggle}\r\n              />\r\n          \r\n          ) )}   \r\n        </>\r\n  \r\n  \r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText]=useState('')\r\n    const [day, setDay]=useState('')\r\n    const [reminder, setReminder]=useState(false)\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!text || !day){\r\n            alert('please add a task')\r\n            return\r\n        }\r\n        onAdd({text,day,reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n       \r\n\r\n    }   \r\n return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n           <div className='form-control'>\r\n              <label>Task</label>\r\n                <input  type ='text'placeholder ='Add Task'\r\n                value={text} onChange={(e)=> setText(e.target.value)}/>\r\n            </div> \r\n\r\n\r\n            <div className='form-control'>\r\n           <label>date and time </label>\r\n             <input  type ='text'placeholder ='Add date and time'  value={day} onChange={(e)=> setDay(e.target.value)}/>\r\n            </div> \r\n\r\n\r\n\r\n            <div className='form-control form-control-check'>\r\n          <label>set reminder </label>\r\n             <input  type ='checkbox' \r\n             checked={reminder  } value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n            </div> \r\n\r\n\r\n            <input className ='btn btn-block'type ='submit' value ='save task'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/Header'\nimport {useState} from 'react'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nfunction App() {\n const [showAddTask,setShowAddTask]=useState(false)\n  const[tasks,setTasks]=useState([\n    {\n           id : 1,\n           text : 'doc appointment',\n           day: 'feb 5th at 2:30',\n           reminder : true,\n   },{\n       id:2,\n       text : 'meetng at school',\n       day : 'feb 6th at 1:30pm',\n       reminder : true,\n   },{\n       id:3,\n       text : 'food shoping',\n       day : 'feb 5th at 2:30pm',\n       reminder : false,\n   }\n])\n//add task via submiting form\nconst addTask=(task)=>{\n const id =Math.random();\n const newTask ={id,...task}\n setTasks([...tasks,newTask])\n\n}\n// delete task using array filter method\nconst deleteTask=(id)=>{\n  setTasks(tasks.filter((task)=> task.id!==id))\n}\n//Toggle reminder\nconst toggleReminder=(id)=>{\n    setTasks(tasks.map((task)=>task.id===id ? {...task,reminder:!task.reminder} : task))\n} \n return (\n    <div className=\"container\">\n        <Header  onAdd={()=>{\n          setShowAddTask(!showAddTask)\n        }} showAdd={showAddTask}/>\n        {showAddTask && <AddTask onAdd={addTask}/>}\n        {tasks.length>0 ?\n        ( <Tasks tasks = {tasks} onDelete ={deleteTask}\n          onToggle={toggleReminder} />\n        ):(\n          <h3>no task to perform </h3>\n          \n        )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}